---
import Layout from "../../layouts/Layout.astro";
import { NoteService } from "../../lib/services/noteService";
import { supabaseClient } from "../../db/supabase.client";
import type { UpdateNoteCommand } from "../../types";
import BackToHomeButton from "@/components/BackToHomeButton";

// Pobierz ID notatki z URL
const noteId = Astro.url.searchParams.get("id");
let noteData = null;
let errorMessage = "";
let debugInfo = null;

// Pobierz ID użytkownika z sesji
const userId = Astro.locals.userId;
if (!userId) {
  return Astro.redirect("/auth/login?redirect=" + encodeURIComponent(Astro.url.pathname));
}

// Inicjalizacja serwisu notatek
console.log("Inicjalizacja NoteService dla widoku notatki, userId:", userId);
const noteService = new NoteService(supabaseClient);

// Obsługa żądania POST (aktualizacja notatki)
if (Astro.request.method === "POST" && noteId) {
  console.log("Otrzymano żądanie POST dla notatki ID:", noteId);
  try {
    const formData = await Astro.request.formData();
    const note_summary = formData.get("note_summary")?.toString() || "";
    const note_text = formData.get("note_text")?.toString() || "";
    const action = formData.get("action")?.toString();

    console.log("Dane z formularza:", {
      note_summary,
      note_text_length: note_text.length,
      action,
    });

    // Walidacja danych wejściowych
    if (!note_summary || !note_text) {
      errorMessage = "Brak wymaganych pól formularza";
      throw new Error(errorMessage);
    }

    if (action === "delete") {
      // Usuwanie notatki
      console.log("Próba usunięcia notatki ID:", noteId);
      const deleted = await noteService.deleteNote(noteId, userId);
      if (deleted) {
        console.log("Notatka została pomyślnie usunięta");
        return Astro.redirect("/generate");
      } else {
        errorMessage = "Nie udało się usunąć notatki";
        throw new Error(errorMessage);
      }
    } else {
      // Aktualizacja notatki
      console.log("Próba aktualizacji notatki ID:", noteId);
      const updateData: UpdateNoteCommand = {
        note_text,
        note_summary,
      };
      const updatedNote = await noteService.updateNote(noteId, updateData, userId);

      if (updatedNote) {
        console.log("Notatka została pomyślnie zaktualizowana:", updatedNote);
        return Astro.redirect("/generate");
      } else {
        errorMessage = "Nie udało się zaktualizować notatki";
        throw new Error(errorMessage);
      }
    }
  } catch (error) {
    console.error("Błąd podczas przetwarzania formularza:", error);
    errorMessage = error instanceof Error ? error.message : "Nieznany błąd";
    debugInfo = error;
  }
}

// Pobieranie danych notatki
if (noteId) {
  console.log("Próba pobrania notatki o ID:", noteId);
  try {
    noteData = await noteService.getNote(noteId, userId);
    if (!noteData) {
      errorMessage = "Nie znaleziono notatki o podanym ID";
      console.error(errorMessage);
    }
  } catch (error) {
    console.error("Błąd podczas pobierania notatki:", error);
    errorMessage = "Wystąpił błąd podczas pobierania notatki";
    debugInfo = error;
  }
} else {
  errorMessage = "Nie podano ID notatki";
  console.error(errorMessage);
}

const redirectUrl = "/generate";
---

<Layout title="Edycja notatki - TripPlanner">
  <div class="container mx-auto py-6">
    <div class="flex justify-between items-center p-4 border-b mb-6">
      <h1 class="text-xl font-bold">Edycja notatki</h1>
      <BackToHomeButton href={redirectUrl} />
    </div>

    {
      errorMessage && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
          <strong class="font-bold">Błąd: </strong>
          <span>{errorMessage}</span>
          {debugInfo && import.meta.env.DEV && (
            <pre class="mt-2 text-xs overflow-auto">{JSON.stringify(debugInfo, null, 2)}</pre>
          )}
        </div>
      )
    }

    {
      noteData ? (
        <div class="bg-white rounded-lg shadow p-6 max-w-3xl mx-auto">
          <form method="POST" class="space-y-4">
            <div class="mb-4">
              <label for="note_summary" class="block text-sm font-medium mb-1">
                Tytuł notatki
              </label>
              <input
                type="text"
                id="note_summary"
                name="note_summary"
                value={noteData.note_summary}
                class="w-full p-2 border rounded-md"
                placeholder="Wprowadź krótki tytuł notatki"
                required
              />
            </div>

            <div class="mb-6">
              <label for="note_text" class="block text-sm font-medium mb-1">
                Treść notatki
              </label>
              <textarea
                id="note_text"
                name="note_text"
                rows="10"
                class="w-full p-2 border rounded-md"
                placeholder="Wprowadź swoje preferencje podróżnicze, miejsca które chciałbyś odwiedzić, itp."
                required
              >
                {noteData.note_text}
              </textarea>
              <p class="text-xs text-gray-500 mt-1">Te notatki zostaną wykorzystane przy generowaniu planu podróży.</p>
            </div>

            <div class="flex justify-between">
              <button
                type="submit"
                name="action"
                value="delete"
                class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition"
                onclick="return confirm('Czy na pewno chcesz usunąć tę notatkę?')"
              >
                Usuń notatkę
              </button>

              <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">
                Zapisz zmiany
              </button>
            </div>
          </form>
        </div>
      ) : (
        <div class="bg-gray-100 p-4 rounded-md">
          <p>{errorMessage || "Nie udało się załadować notatki"}</p>
          <a href="/generate" class="text-primary hover:underline mt-2 inline-block">
            Wróć do listy notatek
          </a>
        </div>
      )
    }
  </div>
</Layout>
